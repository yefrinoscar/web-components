/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    /**
     * @name Claro Button
     * @description A customizable button component with multiple variants
     */
    interface ClaroButton {
        /**
          * Button is disabled
          * @default false
         */
        "disabled": boolean;
        /**
          * Button with icon
          * @default false
         */
        "icon": boolean;
        /**
          * Button size
          * @default 'md'
         */
        "size": 'xs' | 'sm' | 'md' | 'lg' | 'xl';
        /**
          * Button text
          * @default ''
         */
        "text": string;
        /**
          * The button variant
          * @default 'primary'
         */
        "variant": 'primary' | 'secondary' | 'tertiary' | 'normal' | 'hover' | 'disabled';
    }
    interface ClaroCard {
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
}
declare global {
    /**
     * @name Claro Button
     * @description A customizable button component with multiple variants
     */
    interface HTMLClaroButtonElement extends Components.ClaroButton, HTMLStencilElement {
    }
    var HTMLClaroButtonElement: {
        prototype: HTMLClaroButtonElement;
        new (): HTMLClaroButtonElement;
    };
    interface HTMLClaroCardElement extends Components.ClaroCard, HTMLStencilElement {
    }
    var HTMLClaroCardElement: {
        prototype: HTMLClaroCardElement;
        new (): HTMLClaroCardElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "claro-button": HTMLClaroButtonElement;
        "claro-card": HTMLClaroCardElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    /**
     * @name Claro Button
     * @description A customizable button component with multiple variants
     */
    interface ClaroButton {
        /**
          * Button is disabled
          * @default false
         */
        "disabled"?: boolean;
        /**
          * Button with icon
          * @default false
         */
        "icon"?: boolean;
        /**
          * Button size
          * @default 'md'
         */
        "size"?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';
        /**
          * Button text
          * @default ''
         */
        "text"?: string;
        /**
          * The button variant
          * @default 'primary'
         */
        "variant"?: 'primary' | 'secondary' | 'tertiary' | 'normal' | 'hover' | 'disabled';
    }
    interface ClaroCard {
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "claro-button": ClaroButton;
        "claro-card": ClaroCard;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            /**
             * @name Claro Button
             * @description A customizable button component with multiple variants
             */
            "claro-button": LocalJSX.ClaroButton & JSXBase.HTMLAttributes<HTMLClaroButtonElement>;
            "claro-card": LocalJSX.ClaroCard & JSXBase.HTMLAttributes<HTMLClaroCardElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
